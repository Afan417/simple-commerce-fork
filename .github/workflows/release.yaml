name: Release

# This workflow tags a release, builds front-end assets and sends various notifications & webhooks when a release has been created.
# How to use:
# 1. Create a git tag - `git tag <version number>`
# 2. Push tags to the origin - `git push origin --tags`
# 3. This Github Action will do its stuff...
# 4. Wait for a Slack notification, then it should be good to add a release changelog.

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Prepare & Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Install dependencies
        run: npm install

      - name: Compile assets
        run: npm run production

      - name: Create zip
        run: cd resources && tar -czvf dist.tar.gz dist

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}

      - name: Upload zip to release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./resources/dist.tar.gz
          asset_name: dist.tar.gz
          asset_content_type: application/tar+gz

      - name: Send Slack Notification
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

      # - name: Discord Notification
      #   uses: appleboy/discord-action@master
      #   with:
      #     webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
      #     webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}

      - name: Deploy Documentation
        uses: distributhor/workflow-webhook@v1
        env:
          webhook_url: ${{ secrets.FORGE_WEBHOOK_URL }}
          webhook_secret: ${{ secrets.FORGE_WEBHOOK_SECRET }}
